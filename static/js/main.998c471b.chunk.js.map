{"version":3,"sources":["components/Task.js","components/TaskList.js","components/Button.js","App.js","index.js"],"names":["Task","task","toggleTask","onToggle","className","type","checked","complete","onChange","id","onDoubleClick","name","TaskList","tasks","map","Button","bgColor","textColor","text","onClick","padding","bottom","right","style","background","color","LOCAL_STORAGE_KEY","App","tasksRef","useRef","useState","setTasks","useEffect","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","console","log","length","filter","ref","placeholder","taskName","current","value","Math","floor","random","alert","prevTodos","newTasks","clear","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.998c471b.chunk.js","sourcesContent":["const Task = ({task, toggleTask, onToggle}) => {\r\n    function handleToggleTask(){\r\n        toggleTask(task.id)\r\n    }\r\n    return(\r\n        <div className='task-component'>\r\n            <input type='checkbox' checked = {task.complete} onChange = {handleToggleTask} onDoubleClick = {onToggle}/>\r\n         {task.name}\r\n         \r\n \r\n        </div>\r\n    )\r\n}\r\nexport default Task","import React from 'react'\r\nimport Task from './Task'\r\n \r\nconst TaskList = ({tasks, toggleTask, onToggle}) => {\r\n    return (\r\n        <div>\r\n            {tasks.map(task => <Task key = {task.id} task = {task} toggleTask = {toggleTask} onToggle = {onToggle}/>)}\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default TaskList\r\n","import React from 'react'\r\n\r\nconst Button = ({bgColor,textColor,text,onClick,padding,bottom,right}) => {\r\n    return (\r\n        <div>\r\n            <button className = 'buttons'\r\n             style = {{background:bgColor, color:textColor,padding:padding, right:right, bottom:bottom}}\r\n            onClick = {onClick}>{text}</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import { useState,useRef, useEffect } from 'react'\nimport TaskList from './components/TaskList'\nimport './index.css'\nimport Button from './components/Button'\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\nconst App = () => {\n  const tasksRef = useRef()\n  const [tasks, setTasks] = useState([])\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if(storedTasks) setTasks(storedTasks)\n  }, [])\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(tasks))\n  }, [tasks])\n  useEffect(() => {\n    console.log('something changed')\n  }, [tasks])\n  function addTasks(){\n    var taskName = tasksRef.current.value\n    var id = Math.floor(Math.random()*10000)+1\n    if (taskName === '') return alert('Please Add a Task')\n    setTasks(prevTodos => {\n      return [...tasks, {id:id, name:taskName, complete:false}]\n    })\n    tasksRef.current.value = null\n  }\n  function toggleTask(id){\n    const newTasks = [...tasks]\n    const task = newTasks.find(task => task.id === id)\n    task.complete = !task.complete\n    setTasks(newTasks)\n  }\n  function removeTasks(){\n  const newTasks = tasks.filter(task => !task.complete)\n  setTasks(newTasks)\n  }\n  function removeAllTasks(){\n  setTasks([]) \n  }\n  function clearStorage(){\n    localStorage.clear()\n    alert('Storage has been cleared, refresh page to see results')\n  }\n  function onToggle(){\n    alert('toggled')\n  }\n  // npm uninstall -g create-react-app && npm i -g npm@latest && npm cache clean -f   COMMAND\n  return (\n    <div className='container'>\n <h1 className='project-title'>React JS Task Tracker</h1>\n{\n  tasks.length == 0 ? '': <h1 className='total-tasks'>{tasks.filter(task => !task.complete).length} left to do </h1>\n}\n      <input className = 'input-field' ref ={tasksRef} placeholder = 'Add Task...'/>\n      <Button bgColor=\"#35CF79\" textColor=\"white\" onClick = {addTasks} text='Add Task' bottom =\"79px\" right = '95px'/>\n      <Button bgColor = '#1183F5' textColor='white' onClick ={removeTasks} bottom = '109px' right='-95px' text='Remove Task'/>\n      <Button bgColor = '#F7440B' textColor='white' onClick = {removeAllTasks} text='Delete All Tasks' bottom = '79px' right = '95px'/>\n      <Button bgColor = '#F7CA0B' textColor='black' onClick = {clearStorage} text='Clear Storage' bottom = '108px' right='-95px'/>\n      { tasks.length > 0 ? <TaskList tasks = {tasks} toggleTask = {toggleTask}/> : 'No tasks to show'}\n\n    </div>\n  \n  )\n}\n{/* https://www.youtube.com/watch?v=THL1OPn72vo&list=PLZlA0Gpn_vH_NT5zPVp18nGe_W9LqBDQK&index=11 */}\n    {/* https://github.com/john-smilga/javascript-basic-projects */}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}